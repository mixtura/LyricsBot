module LyricsBot.Grabbers

  open FSharp.Data
  open Model
  
  type private WikiaLyricsPageProvider = HtmlProvider<"http://lyrics.wikia.com/Green Day:Holiday">
  type private AZLyricsSearchResultsProvider = HtmlProvider<"https://search.azlyrics.com/search.php?q=love+of+my+life">
  type private AZLyricsPageProvider = HtmlProvider<"https://www.azlyrics.com/lyrics/queen/loveofmylife.html">

  let searchLyrics query =
    let searchLyricsLink searchQuery = sprintf "https://search.azlyrics.com/search.php?q=%s" searchQuery
    
    // auto-generated by Google Chrome debug tool
    let azlyricsSelector = "body > div.container.main-page > div > div.col-xs-12.col-lg-8.text-center > div:nth-child(8)"
    let azLyricsFirstSearchResultSelector = "body > div.container.main-page > div > div > div > table > tbody > tr:nth-child(2) > td > a"
    
    let extractAzLyrics (page:AZLyricsPageProvider) = 
      page.Html.CssSelect azlyricsSelector
      |> List.tryHead
      |> Option.map (fun node -> node.InnerText())

    let extractAzLyricsSearchFirstResult (page:AZLyricsSearchResultsProvider) = 
      page.Html.CssSelect azLyricsFirstSearchResultSelector
      |> List.tryHead
      |> Option.bind (fun node -> node.TryGetAttribute "href")
      |> Option.map (fun attr -> attr.Value())

    async {
      let! resultsPage = searchLyricsLink query |> AZLyricsSearchResultsProvider.AsyncLoad
      let resultLink = resultsPage |> extractAzLyricsSearchFirstResult
       
      return resultLink 
        |> Option.map (AZLyricsPageProvider.Load)
        |> Option.bind (extractAzLyrics)
    }

  let getLyrics song = 

    let getLyricsLink {Artist = artist; Track = track} = 
        sprintf "http://lyrics.wikia.com/wiki/%s:%s" artist track 

    let extractWikiaLyrics (page:WikiaLyricsPageProvider) = 
      page.Html.CssSelect ".lyricbox" |>
      List.tryHead |> 
      Option.map (fun node -> node.InnerText())

    async {
      let! page = getLyricsLink song |> WikiaLyricsPageProvider.AsyncLoad
      return extractWikiaLyrics page
    }