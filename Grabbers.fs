module LyricsBot.Grabbers

  module private HtmlAgilityWrappers = 
    open HtmlAgilityPack

    let loadDoc (url: string) = (new HtmlWeb()).Load(url)
    let extractFirstNode (selector: string) (doc: HtmlDocument) =       
      doc.DocumentNode.SelectNodes(selector).FindFirst("") |> Option.ofObj

    let extractAttr attrName (node: HtmlNode) =
      node.GetAttributeValue(attrName, "")
      |> Some
      |> Option.bind (function | "" -> None | x -> Some x)

  module AZLyrics =
    open HtmlAgilityWrappers
    
    let searchLyrics query =
      let searchLyricsLink = sprintf "https://search.azlyrics.com/search.php?q=%s&w=songs" query
      
      // auto-generated by Google Chrome debug tool
      let azlyricsSelector = "/html/body/div[3]/div/div[2]/div[5]"
      let azLyricsFirstSearchResultSelector = "/html/body/div[2]/div/div/div/table/tr[2]/td/a"
      
      searchLyricsLink 
      |> loadDoc 
      |> (extractFirstNode azLyricsFirstSearchResultSelector)
      |> Option.bind(extractAttr "href")
      |> Option.map loadDoc
      |> Option.bind (extractFirstNode azlyricsSelector)
      |> Option.map (fun node -> node.InnerText)

  module WikiaLyrics =
    open FSharp.Data
    open Model
    
    type private WikiaLyricsPageProvider = HtmlProvider<"http://lyrics.wikia.com/Green Day:Holiday">

    let getLyrics song = 

      let getLyricsLink {Artist = artist; Track = track} = 
          sprintf "http://lyrics.wikia.com/wiki/%s:%s" artist track 

      let extractWikiaLyrics (page:WikiaLyricsPageProvider) = 
        page.Html.CssSelect ".lyricbox" |>
        List.tryHead |> 
        Option.map (fun node -> node.InnerText())

      async {
        let! page = getLyricsLink song |> WikiaLyricsPageProvider.AsyncLoad
        return extractWikiaLyrics page
      }